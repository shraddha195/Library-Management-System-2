package lbproj;

import java.util.Scanner;

public class Main {

	static Scanner scanner = new Scanner(System.in);

	public static void main(String[] args) {

		int choice;
		while (true) {
			//System.out.println("1. Create Table Book");
			System.out.println("1. Insert Data into Book Table");
			System.out.println("2. Update Book");
			System.out.println("3. Show Book Table");
			//System.out.println("5. Create Table Members");
			System.out.println("4. Insert Data into Members Table");
			System.out.println("5. Show Members Table");
			System.out.println("6. Exit Application");

			choice = scanner.nextInt();
			scanner.nextLine(); // consume newline

			switch (choice) {
			/*case 1:
				String sql = "CREATE TABLE IF NOT EXISTS Book (" +
						"id SERIAL PRIMARY KEY," +
						"bname VARCHAR(100) NOT NULL," +
						"author VARCHAR(100) NOT NULL)";
				lbconnections.createTbl(sql);
				break;*/

			case 1:
				System.out.print("Enter ID: ");
				int id = scanner.nextInt();
				scanner.nextLine();
				System.out.print("Enter Book Name: ");
				String name = scanner.nextLine();
				System.out.print("Enter Author: ");
				String author = scanner.nextLine();
				lbconnections.insertData(id, name, author);
				break;

			case 2:
				System.out.print("Enter ID to update: ");
				int updateId = scanner.nextInt();
				scanner.nextLine();
				System.out.print("Enter New Book Name: ");
				String newName = scanner.nextLine();
				System.out.print("Enter New Author: ");
				String newAuthor = scanner.nextLine();
				lbconnections.updateData(updateId, newName, newAuthor);
				break;

			case 3:
				lbconnections.showTable();
				break;

			/*case 5:
				String sql1 = "CREATE TABLE IF NOT EXISTS Members (" +
						"id INT PRIMARY KEY," +
						"name VARCHAR(100) NOT NULL)";
				lbconnections.creatememberTbl(sql1);
				break;*/

			case 4:
				System.out.print("Enter ID: ");
				int memberId = scanner.nextInt();
				scanner.nextLine();
				System.out.print("Enter Name: ");
				String memberName = scanner.nextLine();
				lbconnections.insertDatamembers(memberId, memberName);
				break;

			case 5:
				lbconnections.showmemberTable();
				break;

			case 6:
				System.out.println("Exiting...");
				scanner.close();
				return;

			default:
				System.out.println("Invalid choice. Try again.");
			}
		}
	}
}
